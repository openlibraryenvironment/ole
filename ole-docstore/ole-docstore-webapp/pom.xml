<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <name>The ole-docstore-webapp Application</name>
    <parent>
        <artifactId>ole-docstore</artifactId>
        <groupId>org.kuali.ole</groupId>
        <version>2.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.kuali.ole</groupId>
    <artifactId>ole-docstore-webapp</artifactId>
    <version>2.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--allows the supported database to be changed via parameter (ex: oracle to mysql) -->
        <database.groupId>mysql</database.groupId>
        <database.artifactId>${mysql.jdbc.artifactId}</database.artifactId>
        <database.version>${mysql.jdbc.version}</database.version>
        <!--dependency versions -->
        <jsp-api.version>2.1</jsp-api.version>
        <junit.version>4.10</junit.version>
        <oracle.jdbc.version>10.2.0.3.0</oracle.jdbc.version>
        <oracle.jdbc.artifactId>ojdbc14</oracle.jdbc.artifactId>
        <mysql.jdbc.version>5.1.18</mysql.jdbc.version>
        <mysql.jdbc.artifactId>mysql-connector-java</mysql.jdbc.artifactId>
        <jaxb-impl.version>2.2.11</jaxb-impl.version>
        <servlet-api.version>2.5</servlet-api.version>
        <!--plugin versions -->
        <!--
          It is a good idea to explicitly place plugin version numbers in a build. This makes the build
          more stable and less dependant on a specific version of maven.
        -->
        <plugin.build-helper.version>1.7</plugin.build-helper.version>
        <plugin.compiler.version>2.5.1</plugin.compiler.version>
        <plugin.surefire.version>2.12.3</plugin.surefire.version>
        <plugin.failsafe.version>2.12.3</plugin.failsafe.version>
        <plugin.war.version>2.2</plugin.war.version>
        <plugin.jetty.version>8.1.7.v20120910</plugin.jetty.version>
        <!-- other properties -->
        <jetty.port>8080</jetty.port>
        <maven.failsafe.skip>true</maven.failsafe.skip>
        <plugin.compiler.source>1.6</plugin.compiler.source>
        <plugin.compiler.target>1.6</plugin.compiler.target>
    </properties>
    <build>
        <finalName>oledocstore</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/META-INF/*.xml</include>
                    <include>**/ole-docstore-config.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/META-INF/*.xml</exclude>
                    <exclude>**/ole-docstore-config.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/it/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <!--
          To help manage complex builds, the maven enforcer plugin has many useful rules.
          This is not configured in this sample pom for simplicity sake.

          http://maven.apache.org/plugins/maven-enforcer-plugin/
        -->
        <plugins>
            <!--
              Compiler plugin to specify Java source and target versions and encoding
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.compiler.version}</version>
                <configuration>
                    <source>${plugin.compiler.source}</source>
                    <target>${plugin.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!--
              Using war overlays to extract the web content from the rice web module.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${plugin.war.version}</version>
                <configuration>
                    <overlays>
                        <overlay>
                            <groupId>org.kuali.rice</groupId>
                            <artifactId>rice-web</artifactId>
                            <filtered>false</filtered>
                            <excludes>
                                <exclude>
                                    WEB-INF/lib/xstream*.jar
                                </exclude>
                            </excludes>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
            <!--
              Adds a new source directory for integration tests.

              In order for the buildhelper plugin to work with eclipse and m2e, an m2e-extra eclipse plugin
              must be installed called: org.sonatype.m2e.buildhelper. This is the case until the buildhelper plugin
              directly supports m2e

              http://stackoverflow.com/questions/8212846/cant-install-eclipse-plugin-m2e-connector-for-build-helper-maven-plugin-0-15-0
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${plugin.build-helper.version}</version>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
              This executes unit tests. These tests are executed by default when the project is built.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin.surefire.version}</version>
            </plugin>
            <!--
              This allows the application be be launched in a jetty server using a maven command.
              A tomcat plugin could also be configured and used if desired.
            -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${plugin.jetty.version}</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/ole-docstore-webapp</contextPath>
                    </webAppConfig>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>${jetty.port}</port>
                        </connector>
                    </connectors>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>${database.groupId}</groupId>
                        <artifactId>${database.artifactId}</artifactId>
                        <version>${database.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <!--
    This is a profile activate and enables a special build configuration when executing integration tests.
    The profile is activated by setting the property maven.failsafe.skip to false.
    -->
    <profiles>
        <!--<profile>
            <id>db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.kuali.maven.plugins</groupId>
                        <artifactId>spring-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>load</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>load</goal>
                                </goals>
                                <configuration>
                                    <propertySourcesConfig>org.kuali.ole.db.sql.OleRiceDbMavenPropertySourceConfig </propertySourcesConfig>
                                    <annotatedClass>org.kuali.common.jdbc.spring.SqlControllerConfig</annotatedClass>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.kuali.rice</groupId>
                                <artifactId>${rice.impex.artifactId}</artifactId>
                                <classifier>sql</classifier>
                                <version>${rice.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.kuali.ole</groupId>
                                <artifactId>ole-docstore-db</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>${jdbc.driver.groupId}</groupId>
                                <artifactId>${jdbc.driver.artifactId}</artifactId>
                                <version>${jdbc.driver.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.kuali.common</groupId>
                                <artifactId>kuali-jdbc</artifactId>
                                <version>${kuali-jdbc.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.kuali.common</groupId>
                                <artifactId>kuali-util</artifactId>
                                <version>${kuali-util.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.kuali.common</groupId>
                                <artifactId>kuali-sql</artifactId>
                                <version>${kuali-sql.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>-->
        <profile>
            <id>itests</id>
            <activation>
                <property>
                    <name>maven.failsafe.skip</name>
                    <value>false</value>
                </property>
            </activation>
            <properties>
                <jetty.stop.port>9999</jetty.stop.port>
            </properties>
            <build>
                <plugins>
                    <!--
                      This executes integration tests. These tests are NOT executed by default when the project is built.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${plugin.failsafe.version}</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <skip>${maven.failsafe.skip}</skip>
                            <failIfNoTests>false</failIfNoTests>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <systemPropertyVariables>
                                <test.port>${jetty.port}</test.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <!--
                    This configures jetty to startup and shut down for integration tests.  This allows integration
                    tests to call into the application using web requests.
                    A tomcat plugin could also be configured and used if desired.
                    -->
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${plugin.jetty.version}</version>
                        <configuration>
                            <webAppConfig>
                                <contextPath>/ole-docstore-webapp</contextPath>
                            </webAppConfig>
                            <connectors>
                                <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                                    <port>${jetty.port}</port>
                                </connector>
                            </connectors>
                            <stopKey>stop_jetty</stopKey>
                            <stopPort>${jetty.stop.port}</stopPort>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${database.groupId}</groupId>
                                <artifactId>${database.artifactId}</artifactId>
                                <version>${database.version}</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <!--
          Kuali Rice libraries

          Ideally you only declare the modules of rice you are using.
          In practice, you may need to declare them all until rice's modularity work is complete.

          The only modules rice recommends compiling against are api & framework modules.

          It is usually a good idea to list ALL of the third party libraries being directly references in code.
          This makes it explicit which libraries are being used rather than coming in through a transitive relationship
          with other libraries. The http://maven.apache.org/plugins/maven-dependency-plugin/ does a pretty good job of
          finding these missing dependencies.
        -->
        <!-- core -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-api</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-framework</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-impl</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-web</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <!-- core service -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-framework</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-impl</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-web</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <!-- edl -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-edl-framework</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-edl-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- legacy rice impl module -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-cas</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- ken -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ken-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <!-- kew -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-framework</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-impl</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <!-- kim (not including kim-ldap support) -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-framework</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- kns (not including legacy kns) -->
        <!-- krad -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krad-app-framework</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krad-web-framework</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-core-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- krms -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krms-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krms-framework</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krms-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- ksb -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-client-impl</artifactId>
            <version>${rice.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-server-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-web</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- location -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-api</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-framework</artifactId>
            <version>${rice.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-impl</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-web</artifactId>
            <version>${rice.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- web -->
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-web</artifactId>
            <version>${rice.version}</version>
            <type>war</type>
        </dependency>
        <!-- third party libraries -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <!--Docstore specific-->
        </dependency>
        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-docstore-search</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-docstore-engine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-utility</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-sru</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-dataimporthandler</artifactId>
        </dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.apache.solr</groupId>-->
            <!--<artifactId>solr-commons-csv</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.apache.solr</groupId>-->
            <!--<artifactId>solr-noggit</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-dataimporthandler</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>1.0.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-asl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>org.objectweb.asm</groupId>
            <artifactId>com.springsource.org.objectweb.asm</artifactId>
            <version>3.1.0</version>
        </dependency>
        <!--<dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.1</version>
        </dependency>-->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.23</version>
        </dependency>
        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-docstore-db</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jrobin</groupId>
            <artifactId>jrobin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>${rice.impex.artifactId}</artifactId>
            <classifier>sql</classifier>
        </dependency>
        <dependency>
            <groupId>org.kuali.common</groupId>
            <artifactId>kuali-util</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-cas</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>2.6.0-rc2</version>
        </dependency>

        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-solr-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.8</version>
        </dependency>

        <dependency>
            <groupId>org.kuali.ole</groupId>
            <artifactId>ole-reporting</artifactId>
            <version>2.1-SNAPSHOT</version>
        </dependency>

    </dependencies>
</project>
